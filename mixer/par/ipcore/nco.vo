//IP Functional Simulation Model
//VERSION_BEGIN 13.1 cbx_mgl 2013:10:23:18:06:54:SJ cbx_simgen 2013:10:23:18:05:48:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// You may only use these simulation model output files for simulation
// purposes and expressly not for synthesis or any other purposes (in which
// event Altera disclaims all warranties of any kind).


//synopsys translate_off

//synthesis_resources = altsyncram 2 lpm_add_sub 2 lpm_counter 1 lut 226 mux21 29 oper_add 3 oper_mux 20 
`timescale 1 ps / 1 ps
module  nco
	( 
	clk,
	clken,
	fcos_o,
	fsin_o,
	out_valid,
	phi_inc_i,
	reset_n) /* synthesis synthesis_clearbox=1 */;
	input   clk;
	input   clken;
	output   [9:0]  fcos_o;
	output   [9:0]  fsin_o;
	output   out_valid;
	input   [15:0]  phi_inc_i;
	input   reset_n;

	wire  [8:0]   wire_nliOi_q_a;
	wire  [8:0]   wire_nliOl_q_a;
	reg	n010i17;
	reg	n010i18;
	reg	n010l15;
	reg	n010l16;
	reg	n010O13;
	reg	n010O14;
	reg	n011i23;
	reg	n011i24;
	reg	n011l21;
	reg	n011l22;
	reg	n011O19;
	reg	n011O20;
	reg	n01ii11;
	reg	n01ii12;
	reg	n01il10;
	reg	n01il9;
	reg	n01iO7;
	reg	n01iO8;
	reg	n01li5;
	reg	n01li6;
	reg	n01ll3;
	reg	n01ll4;
	reg	n01Ol1;
	reg	n01Ol2;
	reg	n1O0i47;
	reg	n1O0i48;
	reg	n1O0l45;
	reg	n1O0l46;
	reg	n1O0O43;
	reg	n1O0O44;
	reg	n1Oii41;
	reg	n1Oii42;
	reg	n1Oil39;
	reg	n1Oil40;
	reg	n1OiO37;
	reg	n1OiO38;
	reg	n1Oli35;
	reg	n1Oli36;
	reg	n1Oll33;
	reg	n1Oll34;
	reg	n1OlO31;
	reg	n1OlO32;
	reg	n1OOi29;
	reg	n1OOi30;
	reg	n1OOl27;
	reg	n1OOl28;
	reg	n1OOO25;
	reg	n1OOO26;
	reg	n0i0i;
	reg	n0i0l;
	reg	n0i0O;
	reg	n0i1O;
	reg	n0iii;
	reg	n0iil;
	reg	n0iiO;
	reg	n0ili;
	reg	n0ill;
	reg	n0ilO;
	reg	n0iOi;
	reg	n0iOl;
	reg	n0iOO;
	reg	n0l1i;
	reg	n0l1l;
	reg	n0O0l;
	reg	n000i;
	reg	n000l;
	reg	n000O;
	reg	n001l;
	reg	n001O;
	reg	n00i;
	reg	n00ii;
	reg	n00il;
	reg	n00iO;
	reg	n00l;
	reg	n00li;
	reg	n00ll;
	reg	n00lO;
	reg	n00O;
	reg	n00Oi;
	reg	n00Ol;
	reg	n00OO;
	reg	n01i;
	reg	n01l;
	reg	n01O;
	reg	n0i1i;
	reg	n0ii;
	reg	n0il;
	reg	n0iO;
	reg	n0li;
	reg	n0ll;
	reg	n0lO;
	reg	n0O0O;
	reg	n0Oi;
	reg	n0Oii;
	reg	n0Oil;
	reg	n0OiO;
	reg	n0Oll;
	reg	n0OO;
	reg	n0OOO;
	reg	n1iO;
	reg	n1li;
	reg	n1ll;
	reg	n1lO;
	reg	n1Oi;
	reg	n1Ol;
	reg	n1OO;
	reg	ni00i;
	reg	ni00l;
	reg	ni00O;
	reg	ni01i;
	reg	ni01O;
	reg	ni0ii;
	reg	ni0il;
	reg	ni0iO;
	reg	ni0li;
	reg	ni0ll;
	reg	ni0lO;
	reg	ni0Oi;
	reg	ni0Ol;
	reg	ni0OO;
	reg	ni10l;
	reg	ni11O;
	reg	ni1il;
	reg	ni1iO;
	reg	nii0i;
	reg	nii0l;
	reg	nii0O;
	reg	nii1i;
	reg	nii1l;
	reg	nii1O;
	reg	niiii;
	reg	niiil;
	reg	niiiO;
	reg	niili;
	reg	niill;
	reg	niilO;
	reg	niiOi;
	reg	niiOl;
	reg	niiOO;
	reg	nilOl;
	reg	nilOO;
	reg	niO0i;
	reg	niO0l;
	reg	niO0O;
	reg	niO1i;
	reg	niO1l;
	reg	niO1O;
	reg	niOii;
	reg	niOil;
	reg	niOiO;
	reg	niOli;
	reg	niOll;
	reg	niOlO;
	reg	niOOi;
	reg	niOOl;
	reg	niOOO;
	reg	nl00i;
	reg	nl00l;
	reg	nl00O;
	reg	nl01i;
	reg	nl01l;
	reg	nl01O;
	reg	nl0ii;
	reg	nl0il;
	reg	nl0iO;
	reg	nl0li;
	reg	nl0ll;
	reg	nl0lO;
	reg	nl0Oi;
	reg	nl0Ol;
	reg	nl0OO;
	reg	nl10i;
	reg	nl10l;
	reg	nl10O;
	reg	nl11i;
	reg	nl11l;
	reg	nl11O;
	reg	nl1ii;
	reg	nl1il;
	reg	nl1iO;
	reg	nl1li;
	reg	nl1ll;
	reg	nl1lO;
	reg	nl1Oi;
	reg	nl1Ol;
	reg	nl1OO;
	reg	nli0i;
	reg	nli0l;
	reg	nli0O;
	reg	nli1i;
	reg	nli1l;
	reg	nli1O;
	reg	nliii;
	reg	nliil;
	reg	nliiO;
	reg	nlilO;
	reg	nliOO;
	reg	nll0i;
	reg	nll0l;
	reg	nll0O;
	reg	nll1i;
	reg	nll1l;
	reg	nll1O;
	reg	nllii;
	reg	nllil;
	reg	nlliO;
	reg	nllli;
	reg	nllll;
	reg	nlllO;
	reg	nllOi;
	reg	nllOl;
	reg	nllOO;
	reg	nlO1i;
	reg	nlO1l;
	reg	nlO1O;
	reg	n0Ol_clk_prev;
	wire	wire_n0Ol_PRN;
	reg	ni0l;
	wire	wire_ni0i_CLRN;
	wire	wire_ni0i_ENA;
	reg	n0Oli;
	reg	n0OlO;
	reg	n0OOi;
	reg	n0OOl;
	reg	ni10i;
	reg	ni10O;
	reg	ni11i;
	reg	ni11l;
	reg	ni1ii;
	reg	ni1ll;
	reg	ni1li_clk_prev;
	wire	wire_ni1li_CLRN;
	wire	wire_ni1li_PRN;
	wire  [15:0]   wire_n0i1l_result;
	wire  [20:0]   wire_ni01l_result;
	wire  [3:0]   wire_ni1i_q;
	wire	wire_n0l0i_dataout;
	wire	wire_n0l0l_dataout;
	wire	wire_n0l0O_dataout;
	wire	wire_n0l1O_dataout;
	wire	wire_n0lii_dataout;
	wire	wire_n0lil_dataout;
	wire	wire_n0liO_dataout;
	wire	wire_n0lli_dataout;
	wire	wire_n0lll_dataout;
	wire	wire_n0llO_dataout;
	wire	wire_n0lOi_dataout;
	wire	wire_n0lOl_dataout;
	wire	wire_n0lOO_dataout;
	wire	wire_n0O1i_dataout;
	wire	wire_n0O1l_dataout;
	wire	wire_n0O1O_dataout;
	wire	wire_nil0i_dataout;
	wire	wire_nil0l_dataout;
	wire	wire_nil0O_dataout;
	wire	wire_nil1i_dataout;
	wire	wire_nil1l_dataout;
	wire	wire_nil1O_dataout;
	wire	wire_nilii_dataout;
	wire	wire_nilil_dataout;
	wire	wire_niliO_dataout;
	wire	wire_nilli_dataout;
	wire	wire_nilll_dataout;
	wire	wire_nillO_dataout;
	wire	wire_nilOi_dataout;
	wire  [4:0]   wire_ni1lO_o;
	wire  [9:0]   wire_nlili_o;
	wire  [9:0]   wire_nlill_o;
	wire  wire_n10i_o;
	wire  wire_n10l_o;
	wire  wire_n10O_o;
	wire  wire_n11i_o;
	wire  wire_n11l_o;
	wire  wire_n11O_o;
	wire  wire_n1ii_o;
	wire  wire_n1il_o;
	wire  wire_nlO0i_o;
	wire  wire_nlO0l_o;
	wire  wire_nlO0O_o;
	wire  wire_nlOii_o;
	wire  wire_nlOil_o;
	wire  wire_nlOiO_o;
	wire  wire_nlOli_o;
	wire  wire_nlOll_o;
	wire  wire_nlOlO_o;
	wire  wire_nlOOi_o;
	wire  wire_nlOOl_o;
	wire  wire_nlOOO_o;
	wire  n01OO;

	altsyncram   nliOi
	( 
	.address_a({niiOO, niiOl, niiOi, niilO, niill, niili, niiiO, niiil, niiii, nii0O, nii0l, nii0i, nilOl}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_nliOi_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		nliOi.address_aclr_a = "NONE",
		nliOi.address_aclr_b = "NONE",
		nliOi.address_reg_b = "CLOCK1",
		nliOi.byte_size = 8,
		nliOi.byteena_aclr_a = "NONE",
		nliOi.byteena_aclr_b = "NONE",
		nliOi.byteena_reg_b = "CLOCK1",
		nliOi.clock_enable_core_a = "USE_INPUT_CLKEN",
		nliOi.clock_enable_core_b = "USE_INPUT_CLKEN",
		nliOi.clock_enable_input_a = "NORMAL",
		nliOi.clock_enable_input_b = "NORMAL",
		nliOi.clock_enable_output_a = "NORMAL",
		nliOi.clock_enable_output_b = "NORMAL",
		nliOi.ecc_pipeline_stage_enabled = "FALSE",
		nliOi.enable_ecc = "FALSE",
		nliOi.indata_aclr_a = "NONE",
		nliOi.indata_aclr_b = "NONE",
		nliOi.indata_reg_b = "CLOCK1",
		nliOi.init_file = "nco_sin.hex",
		nliOi.init_file_layout = "PORT_A",
		nliOi.intended_device_family = "Cyclone IV E",
		nliOi.numwords_a = 8192,
		nliOi.numwords_b = 1,
		nliOi.operation_mode = "ROM",
		nliOi.outdata_aclr_a = "NONE",
		nliOi.outdata_aclr_b = "NONE",
		nliOi.outdata_reg_a = "CLOCK0",
		nliOi.outdata_reg_b = "UNREGISTERED",
		nliOi.ram_block_type = "AUTO",
		nliOi.rdcontrol_aclr_b = "NONE",
		nliOi.rdcontrol_reg_b = "CLOCK1",
		nliOi.read_during_write_mode_mixed_ports = "DONT_CARE",
		nliOi.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		nliOi.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		nliOi.width_a = 9,
		nliOi.width_b = 1,
		nliOi.width_byteena_a = 1,
		nliOi.width_byteena_b = 1,
		nliOi.width_eccstatus = 3,
		nliOi.widthad_a = 13,
		nliOi.widthad_b = 1,
		nliOi.wrcontrol_aclr_a = "NONE",
		nliOi.wrcontrol_aclr_b = "NONE",
		nliOi.wrcontrol_wraddress_reg_b = "CLOCK1",
		nliOi.lpm_hint = "WIDTH_BYTEENA=1";
	altsyncram   nliOl
	( 
	.address_a({niiOO, niiOl, niiOi, niilO, niill, niili, niiiO, niiil, niiii, nii0O, nii0l, nii0i, nilOl}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_nliOl_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		nliOl.address_aclr_a = "NONE",
		nliOl.address_aclr_b = "NONE",
		nliOl.address_reg_b = "CLOCK1",
		nliOl.byte_size = 8,
		nliOl.byteena_aclr_a = "NONE",
		nliOl.byteena_aclr_b = "NONE",
		nliOl.byteena_reg_b = "CLOCK1",
		nliOl.clock_enable_core_a = "USE_INPUT_CLKEN",
		nliOl.clock_enable_core_b = "USE_INPUT_CLKEN",
		nliOl.clock_enable_input_a = "NORMAL",
		nliOl.clock_enable_input_b = "NORMAL",
		nliOl.clock_enable_output_a = "NORMAL",
		nliOl.clock_enable_output_b = "NORMAL",
		nliOl.ecc_pipeline_stage_enabled = "FALSE",
		nliOl.enable_ecc = "FALSE",
		nliOl.indata_aclr_a = "NONE",
		nliOl.indata_aclr_b = "NONE",
		nliOl.indata_reg_b = "CLOCK1",
		nliOl.init_file = "nco_cos.hex",
		nliOl.init_file_layout = "PORT_A",
		nliOl.intended_device_family = "Cyclone IV E",
		nliOl.numwords_a = 8192,
		nliOl.numwords_b = 1,
		nliOl.operation_mode = "ROM",
		nliOl.outdata_aclr_a = "NONE",
		nliOl.outdata_aclr_b = "NONE",
		nliOl.outdata_reg_a = "CLOCK0",
		nliOl.outdata_reg_b = "UNREGISTERED",
		nliOl.ram_block_type = "AUTO",
		nliOl.rdcontrol_aclr_b = "NONE",
		nliOl.rdcontrol_reg_b = "CLOCK1",
		nliOl.read_during_write_mode_mixed_ports = "DONT_CARE",
		nliOl.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		nliOl.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		nliOl.width_a = 9,
		nliOl.width_b = 1,
		nliOl.width_byteena_a = 1,
		nliOl.width_byteena_b = 1,
		nliOl.width_eccstatus = 3,
		nliOl.widthad_a = 13,
		nliOl.widthad_b = 1,
		nliOl.wrcontrol_aclr_a = "NONE",
		nliOl.wrcontrol_aclr_b = "NONE",
		nliOl.wrcontrol_wraddress_reg_b = "CLOCK1",
		nliOl.lpm_hint = "WIDTH_BYTEENA=1";
	initial
		n010i17 = 0;
	always @ ( posedge clk)
		  n010i17 <= n010i18;
	event n010i17_event;
	initial
		#1 ->n010i17_event;
	always @(n010i17_event)
		n010i17 <= {1{1'b1}};
	initial
		n010i18 = 0;
	always @ ( posedge clk)
		  n010i18 <= n010i17;
	initial
		n010l15 = 0;
	always @ ( posedge clk)
		  n010l15 <= n010l16;
	event n010l15_event;
	initial
		#1 ->n010l15_event;
	always @(n010l15_event)
		n010l15 <= {1{1'b1}};
	initial
		n010l16 = 0;
	always @ ( posedge clk)
		  n010l16 <= n010l15;
	initial
		n010O13 = 0;
	always @ ( posedge clk)
		  n010O13 <= n010O14;
	event n010O13_event;
	initial
		#1 ->n010O13_event;
	always @(n010O13_event)
		n010O13 <= {1{1'b1}};
	initial
		n010O14 = 0;
	always @ ( posedge clk)
		  n010O14 <= n010O13;
	initial
		n011i23 = 0;
	always @ ( posedge clk)
		  n011i23 <= n011i24;
	event n011i23_event;
	initial
		#1 ->n011i23_event;
	always @(n011i23_event)
		n011i23 <= {1{1'b1}};
	initial
		n011i24 = 0;
	always @ ( posedge clk)
		  n011i24 <= n011i23;
	initial
		n011l21 = 0;
	always @ ( posedge clk)
		  n011l21 <= n011l22;
	event n011l21_event;
	initial
		#1 ->n011l21_event;
	always @(n011l21_event)
		n011l21 <= {1{1'b1}};
	initial
		n011l22 = 0;
	always @ ( posedge clk)
		  n011l22 <= n011l21;
	initial
		n011O19 = 0;
	always @ ( posedge clk)
		  n011O19 <= n011O20;
	event n011O19_event;
	initial
		#1 ->n011O19_event;
	always @(n011O19_event)
		n011O19 <= {1{1'b1}};
	initial
		n011O20 = 0;
	always @ ( posedge clk)
		  n011O20 <= n011O19;
	initial
		n01ii11 = 0;
	always @ ( posedge clk)
		  n01ii11 <= n01ii12;
	event n01ii11_event;
	initial
		#1 ->n01ii11_event;
	always @(n01ii11_event)
		n01ii11 <= {1{1'b1}};
	initial
		n01ii12 = 0;
	always @ ( posedge clk)
		  n01ii12 <= n01ii11;
	initial
		n01il10 = 0;
	always @ ( posedge clk)
		  n01il10 <= n01il9;
	initial
		n01il9 = 0;
	always @ ( posedge clk)
		  n01il9 <= n01il10;
	event n01il9_event;
	initial
		#1 ->n01il9_event;
	always @(n01il9_event)
		n01il9 <= {1{1'b1}};
	initial
		n01iO7 = 0;
	always @ ( posedge clk)
		  n01iO7 <= n01iO8;
	event n01iO7_event;
	initial
		#1 ->n01iO7_event;
	always @(n01iO7_event)
		n01iO7 <= {1{1'b1}};
	initial
		n01iO8 = 0;
	always @ ( posedge clk)
		  n01iO8 <= n01iO7;
	initial
		n01li5 = 0;
	always @ ( posedge clk)
		  n01li5 <= n01li6;
	event n01li5_event;
	initial
		#1 ->n01li5_event;
	always @(n01li5_event)
		n01li5 <= {1{1'b1}};
	initial
		n01li6 = 0;
	always @ ( posedge clk)
		  n01li6 <= n01li5;
	initial
		n01ll3 = 0;
	always @ ( posedge clk)
		  n01ll3 <= n01ll4;
	event n01ll3_event;
	initial
		#1 ->n01ll3_event;
	always @(n01ll3_event)
		n01ll3 <= {1{1'b1}};
	initial
		n01ll4 = 0;
	always @ ( posedge clk)
		  n01ll4 <= n01ll3;
	initial
		n01Ol1 = 0;
	always @ ( posedge clk)
		  n01Ol1 <= n01Ol2;
	event n01Ol1_event;
	initial
		#1 ->n01Ol1_event;
	always @(n01Ol1_event)
		n01Ol1 <= {1{1'b1}};
	initial
		n01Ol2 = 0;
	always @ ( posedge clk)
		  n01Ol2 <= n01Ol1;
	initial
		n1O0i47 = 0;
	always @ ( posedge clk)
		  n1O0i47 <= n1O0i48;
	event n1O0i47_event;
	initial
		#1 ->n1O0i47_event;
	always @(n1O0i47_event)
		n1O0i47 <= {1{1'b1}};
	initial
		n1O0i48 = 0;
	always @ ( posedge clk)
		  n1O0i48 <= n1O0i47;
	initial
		n1O0l45 = 0;
	always @ ( posedge clk)
		  n1O0l45 <= n1O0l46;
	event n1O0l45_event;
	initial
		#1 ->n1O0l45_event;
	always @(n1O0l45_event)
		n1O0l45 <= {1{1'b1}};
	initial
		n1O0l46 = 0;
	always @ ( posedge clk)
		  n1O0l46 <= n1O0l45;
	initial
		n1O0O43 = 0;
	always @ ( posedge clk)
		  n1O0O43 <= n1O0O44;
	event n1O0O43_event;
	initial
		#1 ->n1O0O43_event;
	always @(n1O0O43_event)
		n1O0O43 <= {1{1'b1}};
	initial
		n1O0O44 = 0;
	always @ ( posedge clk)
		  n1O0O44 <= n1O0O43;
	initial
		n1Oii41 = 0;
	always @ ( posedge clk)
		  n1Oii41 <= n1Oii42;
	event n1Oii41_event;
	initial
		#1 ->n1Oii41_event;
	always @(n1Oii41_event)
		n1Oii41 <= {1{1'b1}};
	initial
		n1Oii42 = 0;
	always @ ( posedge clk)
		  n1Oii42 <= n1Oii41;
	initial
		n1Oil39 = 0;
	always @ ( posedge clk)
		  n1Oil39 <= n1Oil40;
	event n1Oil39_event;
	initial
		#1 ->n1Oil39_event;
	always @(n1Oil39_event)
		n1Oil39 <= {1{1'b1}};
	initial
		n1Oil40 = 0;
	always @ ( posedge clk)
		  n1Oil40 <= n1Oil39;
	initial
		n1OiO37 = 0;
	always @ ( posedge clk)
		  n1OiO37 <= n1OiO38;
	event n1OiO37_event;
	initial
		#1 ->n1OiO37_event;
	always @(n1OiO37_event)
		n1OiO37 <= {1{1'b1}};
	initial
		n1OiO38 = 0;
	always @ ( posedge clk)
		  n1OiO38 <= n1OiO37;
	initial
		n1Oli35 = 0;
	always @ ( posedge clk)
		  n1Oli35 <= n1Oli36;
	event n1Oli35_event;
	initial
		#1 ->n1Oli35_event;
	always @(n1Oli35_event)
		n1Oli35 <= {1{1'b1}};
	initial
		n1Oli36 = 0;
	always @ ( posedge clk)
		  n1Oli36 <= n1Oli35;
	initial
		n1Oll33 = 0;
	always @ ( posedge clk)
		  n1Oll33 <= n1Oll34;
	event n1Oll33_event;
	initial
		#1 ->n1Oll33_event;
	always @(n1Oll33_event)
		n1Oll33 <= {1{1'b1}};
	initial
		n1Oll34 = 0;
	always @ ( posedge clk)
		  n1Oll34 <= n1Oll33;
	initial
		n1OlO31 = 0;
	always @ ( posedge clk)
		  n1OlO31 <= n1OlO32;
	event n1OlO31_event;
	initial
		#1 ->n1OlO31_event;
	always @(n1OlO31_event)
		n1OlO31 <= {1{1'b1}};
	initial
		n1OlO32 = 0;
	always @ ( posedge clk)
		  n1OlO32 <= n1OlO31;
	initial
		n1OOi29 = 0;
	always @ ( posedge clk)
		  n1OOi29 <= n1OOi30;
	event n1OOi29_event;
	initial
		#1 ->n1OOi29_event;
	always @(n1OOi29_event)
		n1OOi29 <= {1{1'b1}};
	initial
		n1OOi30 = 0;
	always @ ( posedge clk)
		  n1OOi30 <= n1OOi29;
	initial
		n1OOl27 = 0;
	always @ ( posedge clk)
		  n1OOl27 <= n1OOl28;
	event n1OOl27_event;
	initial
		#1 ->n1OOl27_event;
	always @(n1OOl27_event)
		n1OOl27 <= {1{1'b1}};
	initial
		n1OOl28 = 0;
	always @ ( posedge clk)
		  n1OOl28 <= n1OOl27;
	initial
		n1OOO25 = 0;
	always @ ( posedge clk)
		  n1OOO25 <= n1OOO26;
	event n1OOO25_event;
	initial
		#1 ->n1OOO25_event;
	always @(n1OOO25_event)
		n1OOO25 <= {1{1'b1}};
	initial
		n1OOO26 = 0;
	always @ ( posedge clk)
		  n1OOO26 <= n1OOO25;
	initial
	begin
		n0i0i = 0;
		n0i0l = 0;
		n0i0O = 0;
		n0i1O = 0;
		n0iii = 0;
		n0iil = 0;
		n0iiO = 0;
		n0ili = 0;
		n0ill = 0;
		n0ilO = 0;
		n0iOi = 0;
		n0iOl = 0;
		n0iOO = 0;
		n0l1i = 0;
		n0l1l = 0;
		n0O0l = 0;
	end
	always @ ( posedge clk or  negedge reset_n)
	begin
		if (reset_n == 1'b0) 
		begin
			n0i0i <= 0;
			n0i0l <= 0;
			n0i0O <= 0;
			n0i1O <= 0;
			n0iii <= 0;
			n0iil <= 0;
			n0iiO <= 0;
			n0ili <= 0;
			n0ill <= 0;
			n0ilO <= 0;
			n0iOi <= 0;
			n0iOl <= 0;
			n0iOO <= 0;
			n0l1i <= 0;
			n0l1l <= 0;
			n0O0l <= 0;
		end
		else 
		begin
			n0i0i <= wire_n0l0l_dataout;
			n0i0l <= wire_n0l0O_dataout;
			n0i0O <= wire_n0lii_dataout;
			n0i1O <= wire_n0l0i_dataout;
			n0iii <= wire_n0lil_dataout;
			n0iil <= wire_n0liO_dataout;
			n0iiO <= wire_n0lli_dataout;
			n0ili <= wire_n0lll_dataout;
			n0ill <= wire_n0llO_dataout;
			n0ilO <= wire_n0lOi_dataout;
			n0iOi <= wire_n0lOl_dataout;
			n0iOl <= wire_n0lOO_dataout;
			n0iOO <= wire_n0O1i_dataout;
			n0l1i <= wire_n0O1l_dataout;
			n0l1l <= wire_n0O1O_dataout;
			n0O0l <= wire_n0l1O_dataout;
		end
	end
	event n0i0i_event;
	event n0i0l_event;
	event n0i0O_event;
	event n0i1O_event;
	event n0iii_event;
	event n0iil_event;
	event n0iiO_event;
	event n0ili_event;
	event n0ill_event;
	event n0ilO_event;
	event n0iOi_event;
	event n0iOl_event;
	event n0iOO_event;
	event n0l1i_event;
	event n0l1l_event;
	event n0O0l_event;
	initial
		#1 ->n0i0i_event;
	initial
		#1 ->n0i0l_event;
	initial
		#1 ->n0i0O_event;
	initial
		#1 ->n0i1O_event;
	initial
		#1 ->n0iii_event;
	initial
		#1 ->n0iil_event;
	initial
		#1 ->n0iiO_event;
	initial
		#1 ->n0ili_event;
	initial
		#1 ->n0ill_event;
	initial
		#1 ->n0ilO_event;
	initial
		#1 ->n0iOi_event;
	initial
		#1 ->n0iOl_event;
	initial
		#1 ->n0iOO_event;
	initial
		#1 ->n0l1i_event;
	initial
		#1 ->n0l1l_event;
	initial
		#1 ->n0O0l_event;
	always @(n0i0i_event)
		n0i0i <= 1;
	always @(n0i0l_event)
		n0i0l <= 1;
	always @(n0i0O_event)
		n0i0O <= 1;
	always @(n0i1O_event)
		n0i1O <= 1;
	always @(n0iii_event)
		n0iii <= 1;
	always @(n0iil_event)
		n0iil <= 1;
	always @(n0iiO_event)
		n0iiO <= 1;
	always @(n0ili_event)
		n0ili <= 1;
	always @(n0ill_event)
		n0ill <= 1;
	always @(n0ilO_event)
		n0ilO <= 1;
	always @(n0iOi_event)
		n0iOi <= 1;
	always @(n0iOl_event)
		n0iOl <= 1;
	always @(n0iOO_event)
		n0iOO <= 1;
	always @(n0l1i_event)
		n0l1i <= 1;
	always @(n0l1l_event)
		n0l1l <= 1;
	always @(n0O0l_event)
		n0O0l <= 1;
	initial
	begin
		n000i = 0;
		n000l = 0;
		n000O = 0;
		n001l = 0;
		n001O = 0;
		n00i = 0;
		n00ii = 0;
		n00il = 0;
		n00iO = 0;
		n00l = 0;
		n00li = 0;
		n00ll = 0;
		n00lO = 0;
		n00O = 0;
		n00Oi = 0;
		n00Ol = 0;
		n00OO = 0;
		n01i = 0;
		n01l = 0;
		n01O = 0;
		n0i1i = 0;
		n0ii = 0;
		n0il = 0;
		n0iO = 0;
		n0li = 0;
		n0ll = 0;
		n0lO = 0;
		n0O0O = 0;
		n0Oi = 0;
		n0Oii = 0;
		n0Oil = 0;
		n0OiO = 0;
		n0Oll = 0;
		n0OO = 0;
		n0OOO = 0;
		n1iO = 0;
		n1li = 0;
		n1ll = 0;
		n1lO = 0;
		n1Oi = 0;
		n1Ol = 0;
		n1OO = 0;
		ni00i = 0;
		ni00l = 0;
		ni00O = 0;
		ni01i = 0;
		ni01O = 0;
		ni0ii = 0;
		ni0il = 0;
		ni0iO = 0;
		ni0li = 0;
		ni0ll = 0;
		ni0lO = 0;
		ni0Oi = 0;
		ni0Ol = 0;
		ni0OO = 0;
		ni10l = 0;
		ni11O = 0;
		ni1il = 0;
		ni1iO = 0;
		nii0i = 0;
		nii0l = 0;
		nii0O = 0;
		nii1i = 0;
		nii1l = 0;
		nii1O = 0;
		niiii = 0;
		niiil = 0;
		niiiO = 0;
		niili = 0;
		niill = 0;
		niilO = 0;
		niiOi = 0;
		niiOl = 0;
		niiOO = 0;
		nilOl = 0;
		nilOO = 0;
		niO0i = 0;
		niO0l = 0;
		niO0O = 0;
		niO1i = 0;
		niO1l = 0;
		niO1O = 0;
		niOii = 0;
		niOil = 0;
		niOiO = 0;
		niOli = 0;
		niOll = 0;
		niOlO = 0;
		niOOi = 0;
		niOOl = 0;
		niOOO = 0;
		nl00i = 0;
		nl00l = 0;
		nl00O = 0;
		nl01i = 0;
		nl01l = 0;
		nl01O = 0;
		nl0ii = 0;
		nl0il = 0;
		nl0iO = 0;
		nl0li = 0;
		nl0ll = 0;
		nl0lO = 0;
		nl0Oi = 0;
		nl0Ol = 0;
		nl0OO = 0;
		nl10i = 0;
		nl10l = 0;
		nl10O = 0;
		nl11i = 0;
		nl11l = 0;
		nl11O = 0;
		nl1ii = 0;
		nl1il = 0;
		nl1iO = 0;
		nl1li = 0;
		nl1ll = 0;
		nl1lO = 0;
		nl1Oi = 0;
		nl1Ol = 0;
		nl1OO = 0;
		nli0i = 0;
		nli0l = 0;
		nli0O = 0;
		nli1i = 0;
		nli1l = 0;
		nli1O = 0;
		nliii = 0;
		nliil = 0;
		nliiO = 0;
		nlilO = 0;
		nliOO = 0;
		nll0i = 0;
		nll0l = 0;
		nll0O = 0;
		nll1i = 0;
		nll1l = 0;
		nll1O = 0;
		nllii = 0;
		nllil = 0;
		nlliO = 0;
		nllli = 0;
		nllll = 0;
		nlllO = 0;
		nllOi = 0;
		nllOl = 0;
		nllOO = 0;
		nlO1i = 0;
		nlO1l = 0;
		nlO1O = 0;
	end
	always @ (clk or wire_n0Ol_PRN or reset_n)
	begin
		if (wire_n0Ol_PRN == 1'b0) 
		begin
			n000i <= 1;
			n000l <= 1;
			n000O <= 1;
			n001l <= 1;
			n001O <= 1;
			n00i <= 1;
			n00ii <= 1;
			n00il <= 1;
			n00iO <= 1;
			n00l <= 1;
			n00li <= 1;
			n00ll <= 1;
			n00lO <= 1;
			n00O <= 1;
			n00Oi <= 1;
			n00Ol <= 1;
			n00OO <= 1;
			n01i <= 1;
			n01l <= 1;
			n01O <= 1;
			n0i1i <= 1;
			n0ii <= 1;
			n0il <= 1;
			n0iO <= 1;
			n0li <= 1;
			n0ll <= 1;
			n0lO <= 1;
			n0O0O <= 1;
			n0Oi <= 1;
			n0Oii <= 1;
			n0Oil <= 1;
			n0OiO <= 1;
			n0Oll <= 1;
			n0OO <= 1;
			n0OOO <= 1;
			n1iO <= 1;
			n1li <= 1;
			n1ll <= 1;
			n1lO <= 1;
			n1Oi <= 1;
			n1Ol <= 1;
			n1OO <= 1;
			ni00i <= 1;
			ni00l <= 1;
			ni00O <= 1;
			ni01i <= 1;
			ni01O <= 1;
			ni0ii <= 1;
			ni0il <= 1;
			ni0iO <= 1;
			ni0li <= 1;
			ni0ll <= 1;
			ni0lO <= 1;
			ni0Oi <= 1;
			ni0Ol <= 1;
			ni0OO <= 1;
			ni10l <= 1;
			ni11O <= 1;
			ni1il <= 1;
			ni1iO <= 1;
			nii0i <= 1;
			nii0l <= 1;
			nii0O <= 1;
			nii1i <= 1;
			nii1l <= 1;
			nii1O <= 1;
			niiii <= 1;
			niiil <= 1;
			niiiO <= 1;
			niili <= 1;
			niill <= 1;
			niilO <= 1;
			niiOi <= 1;
			niiOl <= 1;
			niiOO <= 1;
			nilOl <= 1;
			nilOO <= 1;
			niO0i <= 1;
			niO0l <= 1;
			niO0O <= 1;
			niO1i <= 1;
			niO1l <= 1;
			niO1O <= 1;
			niOii <= 1;
			niOil <= 1;
			niOiO <= 1;
			niOli <= 1;
			niOll <= 1;
			niOlO <= 1;
			niOOi <= 1;
			niOOl <= 1;
			niOOO <= 1;
			nl00i <= 1;
			nl00l <= 1;
			nl00O <= 1;
			nl01i <= 1;
			nl01l <= 1;
			nl01O <= 1;
			nl0ii <= 1;
			nl0il <= 1;
			nl0iO <= 1;
			nl0li <= 1;
			nl0ll <= 1;
			nl0lO <= 1;
			nl0Oi <= 1;
			nl0Ol <= 1;
			nl0OO <= 1;
			nl10i <= 1;
			nl10l <= 1;
			nl10O <= 1;
			nl11i <= 1;
			nl11l <= 1;
			nl11O <= 1;
			nl1ii <= 1;
			nl1il <= 1;
			nl1iO <= 1;
			nl1li <= 1;
			nl1ll <= 1;
			nl1lO <= 1;
			nl1Oi <= 1;
			nl1Ol <= 1;
			nl1OO <= 1;
			nli0i <= 1;
			nli0l <= 1;
			nli0O <= 1;
			nli1i <= 1;
			nli1l <= 1;
			nli1O <= 1;
			nliii <= 1;
			nliil <= 1;
			nliiO <= 1;
			nlilO <= 1;
			nliOO <= 1;
			nll0i <= 1;
			nll0l <= 1;
			nll0O <= 1;
			nll1i <= 1;
			nll1l <= 1;
			nll1O <= 1;
			nllii <= 1;
			nllil <= 1;
			nlliO <= 1;
			nllli <= 1;
			nllll <= 1;
			nlllO <= 1;
			nllOi <= 1;
			nllOl <= 1;
			nllOO <= 1;
			nlO1i <= 1;
			nlO1l <= 1;
			nlO1O <= 1;
		end
		else if  (reset_n == 1'b0) 
		begin
			n000i <= 0;
			n000l <= 0;
			n000O <= 0;
			n001l <= 0;
			n001O <= 0;
			n00i <= 0;
			n00ii <= 0;
			n00il <= 0;
			n00iO <= 0;
			n00l <= 0;
			n00li <= 0;
			n00ll <= 0;
			n00lO <= 0;
			n00O <= 0;
			n00Oi <= 0;
			n00Ol <= 0;
			n00OO <= 0;
			n01i <= 0;
			n01l <= 0;
			n01O <= 0;
			n0i1i <= 0;
			n0ii <= 0;
			n0il <= 0;
			n0iO <= 0;
			n0li <= 0;
			n0ll <= 0;
			n0lO <= 0;
			n0O0O <= 0;
			n0Oi <= 0;
			n0Oii <= 0;
			n0Oil <= 0;
			n0OiO <= 0;
			n0Oll <= 0;
			n0OO <= 0;
			n0OOO <= 0;
			n1iO <= 0;
			n1li <= 0;
			n1ll <= 0;
			n1lO <= 0;
			n1Oi <= 0;
			n1Ol <= 0;
			n1OO <= 0;
			ni00i <= 0;
			ni00l <= 0;
			ni00O <= 0;
			ni01i <= 0;
			ni01O <= 0;
			ni0ii <= 0;
			ni0il <= 0;
			ni0iO <= 0;
			ni0li <= 0;
			ni0ll <= 0;
			ni0lO <= 0;
			ni0Oi <= 0;
			ni0Ol <= 0;
			ni0OO <= 0;
			ni10l <= 0;
			ni11O <= 0;
			ni1il <= 0;
			ni1iO <= 0;
			nii0i <= 0;
			nii0l <= 0;
			nii0O <= 0;
			nii1i <= 0;
			nii1l <= 0;
			nii1O <= 0;
			niiii <= 0;
			niiil <= 0;
			niiiO <= 0;
			niili <= 0;
			niill <= 0;
			niilO <= 0;
			niiOi <= 0;
			niiOl <= 0;
			niiOO <= 0;
			nilOl <= 0;
			nilOO <= 0;
			niO0i <= 0;
			niO0l <= 0;
			niO0O <= 0;
			niO1i <= 0;
			niO1l <= 0;
			niO1O <= 0;
			niOii <= 0;
			niOil <= 0;
			niOiO <= 0;
			niOli <= 0;
			niOll <= 0;
			niOlO <= 0;
			niOOi <= 0;
			niOOl <= 0;
			niOOO <= 0;
			nl00i <= 0;
			nl00l <= 0;
			nl00O <= 0;
			nl01i <= 0;
			nl01l <= 0;
			nl01O <= 0;
			nl0ii <= 0;
			nl0il <= 0;
			nl0iO <= 0;
			nl0li <= 0;
			nl0ll <= 0;
			nl0lO <= 0;
			nl0Oi <= 0;
			nl0Ol <= 0;
			nl0OO <= 0;
			nl10i <= 0;
			nl10l <= 0;
			nl10O <= 0;
			nl11i <= 0;
			nl11l <= 0;
			nl11O <= 0;
			nl1ii <= 0;
			nl1il <= 0;
			nl1iO <= 0;
			nl1li <= 0;
			nl1ll <= 0;
			nl1lO <= 0;
			nl1Oi <= 0;
			nl1Ol <= 0;
			nl1OO <= 0;
			nli0i <= 0;
			nli0l <= 0;
			nli0O <= 0;
			nli1i <= 0;
			nli1l <= 0;
			nli1O <= 0;
			nliii <= 0;
			nliil <= 0;
			nliiO <= 0;
			nlilO <= 0;
			nliOO <= 0;
			nll0i <= 0;
			nll0l <= 0;
			nll0O <= 0;
			nll1i <= 0;
			nll1l <= 0;
			nll1O <= 0;
			nllii <= 0;
			nllil <= 0;
			nlliO <= 0;
			nllli <= 0;
			nllll <= 0;
			nlllO <= 0;
			nllOi <= 0;
			nllOl <= 0;
			nllOO <= 0;
			nlO1i <= 0;
			nlO1l <= 0;
			nlO1O <= 0;
		end
		else if  (clken == 1'b1) 
		if (clk != n0Ol_clk_prev && clk == 1'b1) 
		begin
			n000i <= nii1i;
			n000l <= nii1l;
			n000O <= nii1O;
			n001l <= n00Ol;
			n001O <= n00OO;
			n00i <= nlliO;
			n00ii <= n000i;
			n00il <= n000l;
			n00iO <= n000O;
			n00l <= nliOO;
			n00li <= n00ii;
			n00ll <= n00il;
			n00lO <= n00iO;
			n00O <= nll1i;
			n00Oi <= n00li;
			n00Ol <= n00ll;
			n00OO <= n00lO;
			n01i <= nlO1i;
			n01l <= nlO1l;
			n01O <= nlO1O;
			n0i1i <= n00Oi;
			n0ii <= nll1l;
			n0il <= nll1O;
			n0iO <= nll0i;
			n0li <= nll0l;
			n0ll <= nll0O;
			n0lO <= nllii;
			n0O0O <= wire_ni1lO_o[1];
			n0Oi <= nllil;
			n0Oii <= wire_ni1lO_o[2];
			n0Oil <= wire_ni1lO_o[3];
			n0OiO <= wire_ni1lO_o[4];
			n0Oll <= n0Oli;
			n0OO <= n1iO;
			n0OOO <= n0OOl;
			n1iO <= wire_nlO0i_o;
			n1li <= nllli;
			n1ll <= nllll;
			n1lO <= nlllO;
			n1Oi <= nllOi;
			n1Ol <= nllOl;
			n1OO <= nllOO;
			ni00i <= wire_ni01l_result[6];
			ni00l <= wire_ni01l_result[7];
			ni00O <= wire_ni01l_result[8];
			ni01i <= wire_ni1lO_o[0];
			ni01O <= wire_ni01l_result[5];
			ni0ii <= wire_ni01l_result[9];
			ni0il <= wire_ni01l_result[10];
			ni0iO <= wire_ni01l_result[11];
			ni0li <= wire_ni01l_result[12];
			ni0ll <= wire_ni01l_result[13];
			ni0lO <= wire_ni01l_result[14];
			ni0Oi <= wire_ni01l_result[15];
			ni0Ol <= wire_ni01l_result[16];
			ni0OO <= wire_ni01l_result[17];
			ni10l <= ni10i;
			ni11O <= ni11l;
			ni1il <= ni1ii;
			ni1iO <= ni1il;
			nii0i <= wire_nil1l_dataout;
			nii0l <= wire_nil1O_dataout;
			nii0O <= wire_nil0i_dataout;
			nii1i <= wire_ni01l_result[18];
			nii1l <= wire_ni01l_result[19];
			nii1O <= wire_ni01l_result[20];
			niiii <= wire_nil0l_dataout;
			niiil <= wire_nil0O_dataout;
			niiiO <= wire_nilii_dataout;
			niili <= wire_nilil_dataout;
			niill <= wire_niliO_dataout;
			niilO <= wire_nilli_dataout;
			niiOi <= wire_nilll_dataout;
			niiOl <= wire_nillO_dataout;
			niiOO <= wire_nilOi_dataout;
			nilOl <= wire_nil1i_dataout;
			nilOO <= nl0il;
			niO0i <= nl0lO;
			niO0l <= nl0Oi;
			niO0O <= nl0Ol;
			niO1i <= nl0iO;
			niO1l <= nl0li;
			niO1O <= nl0ll;
			niOii <= nl0OO;
			niOil <= nli1i;
			niOiO <= nli1l;
			niOli <= nli1O;
			niOll <= nli0i;
			niOlO <= nli0l;
			niOOi <= nli0O;
			niOOl <= nliii;
			niOOO <= nliil;
			nl00i <= wire_nlill_o[7];
			nl00l <= wire_nlill_o[8];
			nl00O <= (~ wire_nlill_o[9]);
			nl01i <= wire_nlill_o[4];
			nl01l <= wire_nlill_o[5];
			nl01O <= wire_nlill_o[6];
			nl0ii <= wire_nliOl_q_a[0];
			nl0il <= wire_nliOl_q_a[1];
			nl0iO <= wire_nliOl_q_a[2];
			nl0li <= wire_nliOl_q_a[3];
			nl0ll <= wire_nliOl_q_a[4];
			nl0lO <= wire_nliOl_q_a[5];
			nl0Oi <= wire_nliOl_q_a[6];
			nl0Ol <= wire_nliOl_q_a[7];
			nl0OO <= wire_nliOl_q_a[8];
			nl10i <= wire_nlili_o[2];
			nl10l <= wire_nlili_o[3];
			nl10O <= wire_nlili_o[4];
			nl11i <= nliiO;
			nl11l <= wire_nlili_o[0];
			nl11O <= wire_nlili_o[1];
			nl1ii <= wire_nlili_o[5];
			nl1il <= wire_nlili_o[6];
			nl1iO <= wire_nlili_o[7];
			nl1li <= wire_nlili_o[8];
			nl1ll <= (~ wire_nlili_o[9]);
			nl1lO <= wire_nlill_o[0];
			nl1Oi <= wire_nlill_o[1];
			nl1Ol <= wire_nlill_o[2];
			nl1OO <= wire_nlill_o[3];
			nli0i <= wire_nliOi_q_a[3];
			nli0l <= wire_nliOi_q_a[4];
			nli0O <= wire_nliOi_q_a[5];
			nli1i <= wire_nliOi_q_a[0];
			nli1l <= wire_nliOi_q_a[1];
			nli1O <= wire_nliOi_q_a[2];
			nliii <= wire_nliOi_q_a[6];
			nliil <= wire_nliOi_q_a[7];
			nliiO <= wire_nliOi_q_a[8];
			nlilO <= nl0ii;
			nliOO <= wire_nlO0l_o;
			nll0i <= wire_nlOiO_o;
			nll0l <= wire_nlOli_o;
			nll0O <= wire_nlOll_o;
			nll1i <= wire_nlO0O_o;
			nll1l <= wire_nlOii_o;
			nll1O <= wire_nlOil_o;
			nllii <= wire_nlOlO_o;
			nllil <= wire_nlOOi_o;
			nlliO <= wire_nlOOl_o;
			nllli <= wire_nlOOO_o;
			nllll <= wire_n11i_o;
			nlllO <= wire_n11l_o;
			nllOi <= wire_n11O_o;
			nllOl <= wire_n10i_o;
			nllOO <= wire_n10l_o;
			nlO1i <= wire_n10O_o;
			nlO1l <= wire_n1ii_o;
			nlO1O <= wire_n1il_o;
		end
		n0Ol_clk_prev <= clk;
	end
	assign
		wire_n0Ol_PRN = (n01li6 ^ n01li5);
	event n000i_event;
	event n000l_event;
	event n000O_event;
	event n001l_event;
	event n001O_event;
	event n00i_event;
	event n00ii_event;
	event n00il_event;
	event n00iO_event;
	event n00l_event;
	event n00li_event;
	event n00ll_event;
	event n00lO_event;
	event n00O_event;
	event n00Oi_event;
	event n00Ol_event;
	event n00OO_event;
	event n01i_event;
	event n01l_event;
	event n01O_event;
	event n0i1i_event;
	event n0ii_event;
	event n0il_event;
	event n0iO_event;
	event n0li_event;
	event n0ll_event;
	event n0lO_event;
	event n0O0O_event;
	event n0Oi_event;
	event n0Oii_event;
	event n0Oil_event;
	event n0OiO_event;
	event n0Oll_event;
	event n0OO_event;
	event n0OOO_event;
	event n1iO_event;
	event n1li_event;
	event n1ll_event;
	event n1lO_event;
	event n1Oi_event;
	event n1Ol_event;
	event n1OO_event;
	event ni00i_event;
	event ni00l_event;
	event ni00O_event;
	event ni01i_event;
	event ni01O_event;
	event ni0ii_event;
	event ni0il_event;
	event ni0iO_event;
	event ni0li_event;
	event ni0ll_event;
	event ni0lO_event;
	event ni0Oi_event;
	event ni0Ol_event;
	event ni0OO_event;
	event ni10l_event;
	event ni11O_event;
	event ni1il_event;
	event ni1iO_event;
	event nii0i_event;
	event nii0l_event;
	event nii0O_event;
	event nii1i_event;
	event nii1l_event;
	event nii1O_event;
	event niiii_event;
	event niiil_event;
	event niiiO_event;
	event niili_event;
	event niill_event;
	event niilO_event;
	event niiOi_event;
	event niiOl_event;
	event niiOO_event;
	event nilOl_event;
	event nilOO_event;
	event niO0i_event;
	event niO0l_event;
	event niO0O_event;
	event niO1i_event;
	event niO1l_event;
	event niO1O_event;
	event niOii_event;
	event niOil_event;
	event niOiO_event;
	event niOli_event;
	event niOll_event;
	event niOlO_event;
	event niOOi_event;
	event niOOl_event;
	event niOOO_event;
	event nl00i_event;
	event nl00l_event;
	event nl00O_event;
	event nl01i_event;
	event nl01l_event;
	event nl01O_event;
	event nl0ii_event;
	event nl0il_event;
	event nl0iO_event;
	event nl0li_event;
	event nl0ll_event;
	event nl0lO_event;
	event nl0Oi_event;
	event nl0Ol_event;
	event nl0OO_event;
	event nl10i_event;
	event nl10l_event;
	event nl10O_event;
	event nl11i_event;
	event nl11l_event;
	event nl11O_event;
	event nl1ii_event;
	event nl1il_event;
	event nl1iO_event;
	event nl1li_event;
	event nl1ll_event;
	event nl1lO_event;
	event nl1Oi_event;
	event nl1Ol_event;
	event nl1OO_event;
	event nli0i_event;
	event nli0l_event;
	event nli0O_event;
	event nli1i_event;
	event nli1l_event;
	event nli1O_event;
	event nliii_event;
	event nliil_event;
	event nliiO_event;
	event nlilO_event;
	event nliOO_event;
	event nll0i_event;
	event nll0l_event;
	event nll0O_event;
	event nll1i_event;
	event nll1l_event;
	event nll1O_event;
	event nllii_event;
	event nllil_event;
	event nlliO_event;
	event nllli_event;
	event nllll_event;
	event nlllO_event;
	event nllOi_event;
	event nllOl_event;
	event nllOO_event;
	event nlO1i_event;
	event nlO1l_event;
	event nlO1O_event;
	initial
		#1 ->n000i_event;
	initial
		#1 ->n000l_event;
	initial
		#1 ->n000O_event;
	initial
		#1 ->n001l_event;
	initial
		#1 ->n001O_event;
	initial
		#1 ->n00i_event;
	initial
		#1 ->n00ii_event;
	initial
		#1 ->n00il_event;
	initial
		#1 ->n00iO_event;
	initial
		#1 ->n00l_event;
	initial
		#1 ->n00li_event;
	initial
		#1 ->n00ll_event;
	initial
		#1 ->n00lO_event;
	initial
		#1 ->n00O_event;
	initial
		#1 ->n00Oi_event;
	initial
		#1 ->n00Ol_event;
	initial
		#1 ->n00OO_event;
	initial
		#1 ->n01i_event;
	initial
		#1 ->n01l_event;
	initial
		#1 ->n01O_event;
	initial
		#1 ->n0i1i_event;
	initial
		#1 ->n0ii_event;
	initial
		#1 ->n0il_event;
	initial
		#1 ->n0iO_event;
	initial
		#1 ->n0li_event;
	initial
		#1 ->n0ll_event;
	initial
		#1 ->n0lO_event;
	initial
		#1 ->n0O0O_event;
	initial
		#1 ->n0Oi_event;
	initial
		#1 ->n0Oii_event;
	initial
		#1 ->n0Oil_event;
	initial
		#1 ->n0OiO_event;
	initial
		#1 ->n0Oll_event;
	initial
		#1 ->n0OO_event;
	initial
		#1 ->n0OOO_event;
	initial
		#1 ->n1iO_event;
	initial
		#1 ->n1li_event;
	initial
		#1 ->n1ll_event;
	initial
		#1 ->n1lO_event;
	initial
		#1 ->n1Oi_event;
	initial
		#1 ->n1Ol_event;
	initial
		#1 ->n1OO_event;
	initial
		#1 ->ni00i_event;
	initial
		#1 ->ni00l_event;
	initial
		#1 ->ni00O_event;
	initial
		#1 ->ni01i_event;
	initial
		#1 ->ni01O_event;
	initial
		#1 ->ni0ii_event;
	initial
		#1 ->ni0il_event;
	initial
		#1 ->ni0iO_event;
	initial
		#1 ->ni0li_event;
	initial
		#1 ->ni0ll_event;
	initial
		#1 ->ni0lO_event;
	initial
		#1 ->ni0Oi_event;
	initial
		#1 ->ni0Ol_event;
	initial
		#1 ->ni0OO_event;
	initial
		#1 ->ni10l_event;
	initial
		#1 ->ni11O_event;
	initial
		#1 ->ni1il_event;
	initial
		#1 ->ni1iO_event;
	initial
		#1 ->nii0i_event;
	initial
		#1 ->nii0l_event;
	initial
		#1 ->nii0O_event;
	initial
		#1 ->nii1i_event;
	initial
		#1 ->nii1l_event;
	initial
		#1 ->nii1O_event;
	initial
		#1 ->niiii_event;
	initial
		#1 ->niiil_event;
	initial
		#1 ->niiiO_event;
	initial
		#1 ->niili_event;
	initial
		#1 ->niill_event;
	initial
		#1 ->niilO_event;
	initial
		#1 ->niiOi_event;
	initial
		#1 ->niiOl_event;
	initial
		#1 ->niiOO_event;
	initial
		#1 ->nilOl_event;
	initial
		#1 ->nilOO_event;
	initial
		#1 ->niO0i_event;
	initial
		#1 ->niO0l_event;
	initial
		#1 ->niO0O_event;
	initial
		#1 ->niO1i_event;
	initial
		#1 ->niO1l_event;
	initial
		#1 ->niO1O_event;
	initial
		#1 ->niOii_event;
	initial
		#1 ->niOil_event;
	initial
		#1 ->niOiO_event;
	initial
		#1 ->niOli_event;
	initial
		#1 ->niOll_event;
	initial
		#1 ->niOlO_event;
	initial
		#1 ->niOOi_event;
	initial
		#1 ->niOOl_event;
	initial
		#1 ->niOOO_event;
	initial
		#1 ->nl00i_event;
	initial
		#1 ->nl00l_event;
	initial
		#1 ->nl00O_event;
	initial
		#1 ->nl01i_event;
	initial
		#1 ->nl01l_event;
	initial
		#1 ->nl01O_event;
	initial
		#1 ->nl0ii_event;
	initial
		#1 ->nl0il_event;
	initial
		#1 ->nl0iO_event;
	initial
		#1 ->nl0li_event;
	initial
		#1 ->nl0ll_event;
	initial
		#1 ->nl0lO_event;
	initial
		#1 ->nl0Oi_event;
	initial
		#1 ->nl0Ol_event;
	initial
		#1 ->nl0OO_event;
	initial
		#1 ->nl10i_event;
	initial
		#1 ->nl10l_event;
	initial
		#1 ->nl10O_event;
	initial
		#1 ->nl11i_event;
	initial
		#1 ->nl11l_event;
	initial
		#1 ->nl11O_event;
	initial
		#1 ->nl1ii_event;
	initial
		#1 ->nl1il_event;
	initial
		#1 ->nl1iO_event;
	initial
		#1 ->nl1li_event;
	initial
		#1 ->nl1ll_event;
	initial
		#1 ->nl1lO_event;
	initial
		#1 ->nl1Oi_event;
	initial
		#1 ->nl1Ol_event;
	initial
		#1 ->nl1OO_event;
	initial
		#1 ->nli0i_event;
	initial
		#1 ->nli0l_event;
	initial
		#1 ->nli0O_event;
	initial
		#1 ->nli1i_event;
	initial
		#1 ->nli1l_event;
	initial
		#1 ->nli1O_event;
	initial
		#1 ->nliii_event;
	initial
		#1 ->nliil_event;
	initial
		#1 ->nliiO_event;
	initial
		#1 ->nlilO_event;
	initial
		#1 ->nliOO_event;
	initial
		#1 ->nll0i_event;
	initial
		#1 ->nll0l_event;
	initial
		#1 ->nll0O_event;
	initial
		#1 ->nll1i_event;
	initial
		#1 ->nll1l_event;
	initial
		#1 ->nll1O_event;
	initial
		#1 ->nllii_event;
	initial
		#1 ->nllil_event;
	initial
		#1 ->nlliO_event;
	initial
		#1 ->nllli_event;
	initial
		#1 ->nllll_event;
	initial
		#1 ->nlllO_event;
	initial
		#1 ->nllOi_event;
	initial
		#1 ->nllOl_event;
	initial
		#1 ->nllOO_event;
	initial
		#1 ->nlO1i_event;
	initial
		#1 ->nlO1l_event;
	initial
		#1 ->nlO1O_event;
	always @(n000i_event)
		n000i <= 1;
	always @(n000l_event)
		n000l <= 1;
	always @(n000O_event)
		n000O <= 1;
	always @(n001l_event)
		n001l <= 1;
	always @(n001O_event)
		n001O <= 1;
	always @(n00i_event)
		n00i <= 1;
	always @(n00ii_event)
		n00ii <= 1;
	always @(n00il_event)
		n00il <= 1;
	always @(n00iO_event)
		n00iO <= 1;
	always @(n00l_event)
		n00l <= 1;
	always @(n00li_event)
		n00li <= 1;
	always @(n00ll_event)
		n00ll <= 1;
	always @(n00lO_event)
		n00lO <= 1;
	always @(n00O_event)
		n00O <= 1;
	always @(n00Oi_event)
		n00Oi <= 1;
	always @(n00Ol_event)
		n00Ol <= 1;
	always @(n00OO_event)
		n00OO <= 1;
	always @(n01i_event)
		n01i <= 1;
	always @(n01l_event)
		n01l <= 1;
	always @(n01O_event)
		n01O <= 1;
	always @(n0i1i_event)
		n0i1i <= 1;
	always @(n0ii_event)
		n0ii <= 1;
	always @(n0il_event)
		n0il <= 1;
	always @(n0iO_event)
		n0iO <= 1;
	always @(n0li_event)
		n0li <= 1;
	always @(n0ll_event)
		n0ll <= 1;
	always @(n0lO_event)
		n0lO <= 1;
	always @(n0O0O_event)
		n0O0O <= 1;
	always @(n0Oi_event)
		n0Oi <= 1;
	always @(n0Oii_event)
		n0Oii <= 1;
	always @(n0Oil_event)
		n0Oil <= 1;
	always @(n0OiO_event)
		n0OiO <= 1;
	always @(n0Oll_event)
		n0Oll <= 1;
	always @(n0OO_event)
		n0OO <= 1;
	always @(n0OOO_event)
		n0OOO <= 1;
	always @(n1iO_event)
		n1iO <= 1;
	always @(n1li_event)
		n1li <= 1;
	always @(n1ll_event)
		n1ll <= 1;
	always @(n1lO_event)
		n1lO <= 1;
	always @(n1Oi_event)
		n1Oi <= 1;
	always @(n1Ol_event)
		n1Ol <= 1;
	always @(n1OO_event)
		n1OO <= 1;
	always @(ni00i_event)
		ni00i <= 1;
	always @(ni00l_event)
		ni00l <= 1;
	always @(ni00O_event)
		ni00O <= 1;
	always @(ni01i_event)
		ni01i <= 1;
	always @(ni01O_event)
		ni01O <= 1;
	always @(ni0ii_event)
		ni0ii <= 1;
	always @(ni0il_event)
		ni0il <= 1;
	always @(ni0iO_event)
		ni0iO <= 1;
	always @(ni0li_event)
		ni0li <= 1;
	always @(ni0ll_event)
		ni0ll <= 1;
	always @(ni0lO_event)
		ni0lO <= 1;
	always @(ni0Oi_event)
		ni0Oi <= 1;
	always @(ni0Ol_event)
		ni0Ol <= 1;
	always @(ni0OO_event)
		ni0OO <= 1;
	always @(ni10l_event)
		ni10l <= 1;
	always @(ni11O_event)
		ni11O <= 1;
	always @(ni1il_event)
		ni1il <= 1;
	always @(ni1iO_event)
		ni1iO <= 1;
	always @(nii0i_event)
		nii0i <= 1;
	always @(nii0l_event)
		nii0l <= 1;
	always @(nii0O_event)
		nii0O <= 1;
	always @(nii1i_event)
		nii1i <= 1;
	always @(nii1l_event)
		nii1l <= 1;
	always @(nii1O_event)
		nii1O <= 1;
	always @(niiii_event)
		niiii <= 1;
	always @(niiil_event)
		niiil <= 1;
	always @(niiiO_event)
		niiiO <= 1;
	always @(niili_event)
		niili <= 1;
	always @(niill_event)
		niill <= 1;
	always @(niilO_event)
		niilO <= 1;
	always @(niiOi_event)
		niiOi <= 1;
	always @(niiOl_event)
		niiOl <= 1;
	always @(niiOO_event)
		niiOO <= 1;
	always @(nilOl_event)
		nilOl <= 1;
	always @(nilOO_event)
		nilOO <= 1;
	always @(niO0i_event)
		niO0i <= 1;
	always @(niO0l_event)
		niO0l <= 1;
	always @(niO0O_event)
		niO0O <= 1;
	always @(niO1i_event)
		niO1i <= 1;
	always @(niO1l_event)
		niO1l <= 1;
	always @(niO1O_event)
		niO1O <= 1;
	always @(niOii_event)
		niOii <= 1;
	always @(niOil_event)
		niOil <= 1;
	always @(niOiO_event)
		niOiO <= 1;
	always @(niOli_event)
		niOli <= 1;
	always @(niOll_event)
		niOll <= 1;
	always @(niOlO_event)
		niOlO <= 1;
	always @(niOOi_event)
		niOOi <= 1;
	always @(niOOl_event)
		niOOl <= 1;
	always @(niOOO_event)
		niOOO <= 1;
	always @(nl00i_event)
		nl00i <= 1;
	always @(nl00l_event)
		nl00l <= 1;
	always @(nl00O_event)
		nl00O <= 1;
	always @(nl01i_event)
		nl01i <= 1;
	always @(nl01l_event)
		nl01l <= 1;
	always @(nl01O_event)
		nl01O <= 1;
	always @(nl0ii_event)
		nl0ii <= 1;
	always @(nl0il_event)
		nl0il <= 1;
	always @(nl0iO_event)
		nl0iO <= 1;
	always @(nl0li_event)
		nl0li <= 1;
	always @(nl0ll_event)
		nl0ll <= 1;
	always @(nl0lO_event)
		nl0lO <= 1;
	always @(nl0Oi_event)
		nl0Oi <= 1;
	always @(nl0Ol_event)
		nl0Ol <= 1;
	always @(nl0OO_event)
		nl0OO <= 1;
	always @(nl10i_event)
		nl10i <= 1;
	always @(nl10l_event)
		nl10l <= 1;
	always @(nl10O_event)
		nl10O <= 1;
	always @(nl11i_event)
		nl11i <= 1;
	always @(nl11l_event)
		nl11l <= 1;
	always @(nl11O_event)
		nl11O <= 1;
	always @(nl1ii_event)
		nl1ii <= 1;
	always @(nl1il_event)
		nl1il <= 1;
	always @(nl1iO_event)
		nl1iO <= 1;
	always @(nl1li_event)
		nl1li <= 1;
	always @(nl1ll_event)
		nl1ll <= 1;
	always @(nl1lO_event)
		nl1lO <= 1;
	always @(nl1Oi_event)
		nl1Oi <= 1;
	always @(nl1Ol_event)
		nl1Ol <= 1;
	always @(nl1OO_event)
		nl1OO <= 1;
	always @(nli0i_event)
		nli0i <= 1;
	always @(nli0l_event)
		nli0l <= 1;
	always @(nli0O_event)
		nli0O <= 1;
	always @(nli1i_event)
		nli1i <= 1;
	always @(nli1l_event)
		nli1l <= 1;
	always @(nli1O_event)
		nli1O <= 1;
	always @(nliii_event)
		nliii <= 1;
	always @(nliil_event)
		nliil <= 1;
	always @(nliiO_event)
		nliiO <= 1;
	always @(nlilO_event)
		nlilO <= 1;
	always @(nliOO_event)
		nliOO <= 1;
	always @(nll0i_event)
		nll0i <= 1;
	always @(nll0l_event)
		nll0l <= 1;
	always @(nll0O_event)
		nll0O <= 1;
	always @(nll1i_event)
		nll1i <= 1;
	always @(nll1l_event)
		nll1l <= 1;
	always @(nll1O_event)
		nll1O <= 1;
	always @(nllii_event)
		nllii <= 1;
	always @(nllil_event)
		nllil <= 1;
	always @(nlliO_event)
		nlliO <= 1;
	always @(nllli_event)
		nllli <= 1;
	always @(nllll_event)
		nllll <= 1;
	always @(nlllO_event)
		nlllO <= 1;
	always @(nllOi_event)
		nllOi <= 1;
	always @(nllOl_event)
		nllOl <= 1;
	always @(nllOO_event)
		nllOO <= 1;
	always @(nlO1i_event)
		nlO1i <= 1;
	always @(nlO1l_event)
		nlO1l <= 1;
	always @(nlO1O_event)
		nlO1O <= 1;
	initial
	begin
		ni0l = 0;
	end
	always @ ( posedge clk or  negedge wire_ni0i_CLRN)
	begin
		if (wire_ni0i_CLRN == 1'b0) 
		begin
			ni0l <= 0;
		end
		else if  (wire_ni0i_ENA == 1'b1) 
		begin
			ni0l <= n01OO;
		end
	end
	assign
		wire_ni0i_ENA = (clken & ((((wire_ni1i_q[0] & wire_ni1i_q[3]) & (~ wire_ni1i_q[1])) & (~ wire_ni1i_q[2])) & (n01ll4 ^ n01ll3))),
		wire_ni0i_CLRN = ((n01Ol2 ^ n01Ol1) & reset_n);
	initial
	begin
		n0Oli = 0;
		n0OlO = 0;
		n0OOi = 0;
		n0OOl = 0;
		ni10i = 0;
		ni10O = 0;
		ni11i = 0;
		ni11l = 0;
		ni1ii = 0;
		ni1ll = 0;
	end
	always @ (clk or wire_ni1li_PRN or wire_ni1li_CLRN)
	begin
		if (wire_ni1li_PRN == 1'b0) 
		begin
			n0Oli <= 1;
			n0OlO <= 1;
			n0OOi <= 1;
			n0OOl <= 1;
			ni10i <= 1;
			ni10O <= 1;
			ni11i <= 1;
			ni11l <= 1;
			ni1ii <= 1;
			ni1ll <= 1;
		end
		else if  (wire_ni1li_CLRN == 1'b0) 
		begin
			n0Oli <= 0;
			n0OlO <= 0;
			n0OOi <= 0;
			n0OOl <= 0;
			ni10i <= 0;
			ni10O <= 0;
			ni11i <= 0;
			ni11l <= 0;
			ni1ii <= 0;
			ni1ll <= 0;
		end
		else if  (clken == 1'b1) 
		if (clk != ni1li_clk_prev && clk == 1'b1) 
		begin
			n0Oli <= ((ni1ll ^ ni1iO) ^ (ni1ii ^ n0OOi));
			n0OlO <= n0Oll;
			n0OOi <= n0OlO;
			n0OOl <= n0OOi;
			ni10i <= ni11O;
			ni10O <= ni10l;
			ni11i <= n0OOO;
			ni11l <= ni11i;
			ni1ii <= ni10O;
			ni1ll <= ni1iO;
		end
		ni1li_clk_prev <= clk;
	end
	assign
		wire_ni1li_CLRN = (n1O0l46 ^ n1O0l45),
		wire_ni1li_PRN = ((n1O0i48 ^ n1O0i47) & reset_n);
	event n0Oli_event;
	event n0OlO_event;
	event n0OOi_event;
	event n0OOl_event;
	event ni10i_event;
	event ni10O_event;
	event ni11i_event;
	event ni11l_event;
	event ni1ii_event;
	event ni1ll_event;
	initial
		#1 ->n0Oli_event;
	initial
		#1 ->n0OlO_event;
	initial
		#1 ->n0OOi_event;
	initial
		#1 ->n0OOl_event;
	initial
		#1 ->ni10i_event;
	initial
		#1 ->ni10O_event;
	initial
		#1 ->ni11i_event;
	initial
		#1 ->ni11l_event;
	initial
		#1 ->ni1ii_event;
	initial
		#1 ->ni1ll_event;
	always @(n0Oli_event)
		n0Oli <= 1;
	always @(n0OlO_event)
		n0OlO <= 1;
	always @(n0OOi_event)
		n0OOi <= 1;
	always @(n0OOl_event)
		n0OOl <= 1;
	always @(ni10i_event)
		ni10i <= 1;
	always @(ni10O_event)
		ni10O <= 1;
	always @(ni11i_event)
		ni11i <= 1;
	always @(ni11l_event)
		ni11l <= 1;
	always @(ni1ii_event)
		ni1ii <= 1;
	always @(ni1ll_event)
		ni1ll <= 1;
	lpm_add_sub   n0i1l
	( 
	.aclr((~ reset_n)),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({n0l1l, n0l1i, n0iOO, n0iOl, n0iOi, n0ilO, n0ill, n0ili, n0iiO, n0iil, n0iii, n0i0O, n0i0l, n0i0i, n0i1O, n0O0l}),
	.datab({wire_n0i1l_result[15:0]}),
	.overflow(),
	.result(wire_n0i1l_result),
	.add_sub(),
	.cin()
	);
	defparam
		n0i1l.lpm_direction = "ADD",
		n0i1l.lpm_pipeline = 1,
		n0i1l.lpm_representation = "UNSIGNED",
		n0i1l.lpm_width = 16;
	lpm_add_sub   ni01l
	( 
	.aclr((~ reset_n)),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({wire_n0i1l_result[15:0], {5{1'b0}}}),
	.datab({{17{n0OiO}}, n0Oil, n0Oii, n0O0O, ni01i}),
	.overflow(),
	.result(wire_ni01l_result),
	.add_sub(),
	.cin()
	);
	defparam
		ni01l.lpm_direction = "ADD",
		ni01l.lpm_pipeline = 1,
		ni01l.lpm_representation = "SIGNED",
		ni01l.lpm_width = 21;
	lpm_counter   ni1i
	( 
	.aclr((~ reset_n)),
	.clk_en(clken),
	.clock(clk),
	.cout(),
	.q(wire_ni1i_q),
	.aload(),
	.aset(),
	.cin(),
	.cnt_en(),
	.data(),
	.sclr(),
	.sload(),
	.sset(),
	.updown()
	);
	defparam
		ni1i.lpm_direction = "UP",
		ni1i.lpm_modulus = 0,
		ni1i.lpm_port_updown = "PORT_CONNECTIVITY",
		ni1i.lpm_width = 4;
	assign		wire_n0l0i_dataout = (clken === 1'b1) ? phi_inc_i[1] : n0i1O;
	assign		wire_n0l0l_dataout = (clken === 1'b1) ? phi_inc_i[2] : n0i0i;
	assign		wire_n0l0O_dataout = (clken === 1'b1) ? phi_inc_i[3] : n0i0l;
	assign		wire_n0l1O_dataout = (clken === 1'b1) ? phi_inc_i[0] : n0O0l;
	assign		wire_n0lii_dataout = (clken === 1'b1) ? phi_inc_i[4] : n0i0O;
	assign		wire_n0lil_dataout = (clken === 1'b1) ? phi_inc_i[5] : n0iii;
	assign		wire_n0liO_dataout = (clken === 1'b1) ? phi_inc_i[6] : n0iil;
	assign		wire_n0lli_dataout = (clken === 1'b1) ? phi_inc_i[7] : n0iiO;
	assign		wire_n0lll_dataout = (clken === 1'b1) ? phi_inc_i[8] : n0ili;
	assign		wire_n0llO_dataout = (clken === 1'b1) ? phi_inc_i[9] : n0ill;
	assign		wire_n0lOi_dataout = (clken === 1'b1) ? phi_inc_i[10] : n0ilO;
	assign		wire_n0lOl_dataout = (clken === 1'b1) ? phi_inc_i[11] : n0iOi;
	assign		wire_n0lOO_dataout = (clken === 1'b1) ? phi_inc_i[12] : n0iOl;
	assign		wire_n0O1i_dataout = (clken === 1'b1) ? phi_inc_i[13] : n0iOO;
	assign		wire_n0O1l_dataout = (clken === 1'b1) ? phi_inc_i[14] : n0l1i;
	assign		wire_n0O1O_dataout = (clken === 1'b1) ? phi_inc_i[15] : n0l1l;
	assign		wire_nil0i_dataout = ((~ nii1i) === 1'b1) ? ni00O : (~ ni00O);
	assign		wire_nil0l_dataout = ((~ nii1i) === 1'b1) ? ni0ii : (~ ni0ii);
	assign		wire_nil0O_dataout = ((~ nii1i) === 1'b1) ? ni0il : (~ ni0il);
	assign		wire_nil1i_dataout = ((~ nii1i) === 1'b1) ? ni01O : (~ ni01O);
	assign		wire_nil1l_dataout = ((~ nii1i) === 1'b1) ? ni00i : (~ ni00i);
	assign		wire_nil1O_dataout = ((~ nii1i) === 1'b1) ? ni00l : (~ ni00l);
	assign		wire_nilii_dataout = ((~ nii1i) === 1'b1) ? ni0iO : (~ ni0iO);
	assign		wire_nilil_dataout = ((~ nii1i) === 1'b1) ? ni0li : (~ ni0li);
	assign		wire_niliO_dataout = ((~ nii1i) === 1'b1) ? ni0ll : (~ ni0ll);
	assign		wire_nilli_dataout = ((~ nii1i) === 1'b1) ? ni0lO : (~ ni0lO);
	assign		wire_nilll_dataout = ((~ nii1i) === 1'b1) ? ni0Oi : (~ ni0Oi);
	assign		wire_nillO_dataout = ((~ nii1i) === 1'b1) ? ni0Ol : (~ ni0Ol);
	assign		wire_nilOi_dataout = ((~ nii1i) === 1'b1) ? ni0OO : (~ ni0OO);
	oper_add   ni1lO
	( 
	.a({ni1ll, ni1iO, ni1il, ni1ii, ni10O}),
	.b({{4{1'b0}}, ni1ll}),
	.cin(1'b0),
	.cout(),
	.o(wire_ni1lO_o));
	defparam
		ni1lO.sgate_representation = 0,
		ni1lO.width_a = 5,
		ni1lO.width_b = 5,
		ni1lO.width_o = 5;
	oper_add   nlili
	( 
	.a({1'b0, (~ nl0OO), (~ nl0Ol), (~ nl0Oi), (~ nl0lO), (~ nl0ll), (~ nl0li), (~ nl0iO), (~ nl0il), (~ nl0ii)}),
	.b({{9{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlili_o));
	defparam
		nlili.sgate_representation = 0,
		nlili.width_a = 10,
		nlili.width_b = 10,
		nlili.width_o = 10;
	oper_add   nlill
	( 
	.a({1'b0, (~ nliiO), (~ nliil), (~ nliii), (~ nli0O), (~ nli0l), (~ nli0i), (~ nli1O), (~ nli1l), (~ nli1i)}),
	.b({{9{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlill_o));
	defparam
		nlill.sgate_representation = 0,
		nlill.width_a = 10,
		nlill.width_b = 10,
		nlill.width_o = 10;
	oper_mux   n10i
	( 
	.data({nl01l, nl1ii, ((n011O20 ^ n011O19) & nl1ii), nl01l, niOOi, {2{niO0i}}, niOOi}),
	.o(wire_n10i_o),
	.sel({n001O, n001l, ((n010i18 ^ n010i17) & n0i1i)}));
	defparam
		n10i.width_data = 8,
		n10i.width_sel = 3;
	oper_mux   n10l
	( 
	.data({nl01O, ((n010l16 ^ n010l15) & nl1il), ((n010O14 ^ n010O13) & nl1il), nl01O, niOOl, {2{niO0l}}, ((n01ii12 ^ n01ii11) & niOOl)}),
	.o(wire_n10l_o),
	.sel({n001O, n001l, ((n01il10 ^ n01il9) & n0i1i)}));
	defparam
		n10l.width_data = 8,
		n10l.width_sel = 3;
	oper_mux   n10O
	( 
	.data({nl00i, {2{nl1iO}}, nl00i, niOOO, {2{niO0O}}, niOOO}),
	.o(wire_n10O_o),
	.sel({n001O, n001l, n0i1i}));
	defparam
		n10O.width_data = 8,
		n10O.width_sel = 3;
	oper_mux   n11i
	( 
	.data({nl1Ol, {2{nl10i}}, ((n1OiO38 ^ n1OiO37) & nl1Ol), niOli, {2{niO1i}}, niOli}),
	.o(wire_n11i_o),
	.sel({n001O, n001l, n0i1i}));
	defparam
		n11i.width_data = 8,
		n11i.width_sel = 3;
	oper_mux   n11l
	( 
	.data({((n1Oli36 ^ n1Oli35) & nl1OO), {2{nl10l}}, nl1OO, ((n1Oll34 ^ n1Oll33) & niOll), {2{niO1l}}, ((n1OlO32 ^ n1OlO31) & niOll)}),
	.o(wire_n11l_o),
	.sel({n001O, n001l, n0i1i}));
	defparam
		n11l.width_data = 8,
		n11l.width_sel = 3;
	oper_mux   n11O
	( 
	.data({nl01i, nl10O, ((n1OOi30 ^ n1OOi29) & nl10O), nl01i, ((n1OOl28 ^ n1OOl27) & niOlO), ((n1OOO26 ^ n1OOO25) & niO1O), niO1O, ((n011i24 ^ n011i23) & niOlO)}),
	.o(wire_n11O_o),
	.sel({n001O, ((n011l22 ^ n011l21) & n001l), n0i1i}));
	defparam
		n11O.width_data = 8,
		n11O.width_sel = 3;
	oper_mux   n1ii
	( 
	.data({nl00l, {2{nl1li}}, nl00l, nl11i, {2{niOii}}, nl11i}),
	.o(wire_n1ii_o),
	.sel({n001O, n001l, n0i1i}));
	defparam
		n1ii.width_data = 8,
		n1ii.width_sel = 3;
	oper_mux   n1il
	( 
	.data({nl00O, {2{nl1ll}}, ((n01iO8 ^ n01iO7) & nl00O), {4{1'b0}}}),
	.o(wire_n1il_o),
	.sel({n001O, n001l, n0i1i}));
	defparam
		n1il.width_data = 8,
		n1il.width_sel = 3;
	oper_mux   nlO0i
	( 
	.data({nlilO, niOil, nl1lO, {2{nl11l}}, nl1lO, niOil, nlilO}),
	.o(wire_nlO0i_o),
	.sel({n001O, n001l, n0i1i}));
	defparam
		nlO0i.width_data = 8,
		nlO0i.width_sel = 3;
	oper_mux   nlO0l
	( 
	.data({nilOO, niOiO, nl1Oi, {2{nl11O}}, nl1Oi, niOiO, nilOO}),
	.o(wire_nlO0l_o),
	.sel({n001O, n001l, n0i1i}));
	defparam
		nlO0l.width_data = 8,
		nlO0l.width_sel = 3;
	oper_mux   nlO0O
	( 
	.data({niO1i, niOli, nl1Ol, {2{nl10i}}, nl1Ol, niOli, niO1i}),
	.o(wire_nlO0O_o),
	.sel({n001O, n001l, n0i1i}));
	defparam
		nlO0O.width_data = 8,
		nlO0O.width_sel = 3;
	oper_mux   nlOii
	( 
	.data({niO1l, niOll, nl1OO, {2{nl10l}}, nl1OO, niOll, niO1l}),
	.o(wire_nlOii_o),
	.sel({n001O, n001l, n0i1i}));
	defparam
		nlOii.width_data = 8,
		nlOii.width_sel = 3;
	oper_mux   nlOil
	( 
	.data({niO1O, niOlO, nl01i, {2{nl10O}}, nl01i, niOlO, niO1O}),
	.o(wire_nlOil_o),
	.sel({n001O, n001l, n0i1i}));
	defparam
		nlOil.width_data = 8,
		nlOil.width_sel = 3;
	oper_mux   nlOiO
	( 
	.data({niO0i, niOOi, nl01l, {2{nl1ii}}, nl01l, niOOi, niO0i}),
	.o(wire_nlOiO_o),
	.sel({n001O, n001l, n0i1i}));
	defparam
		nlOiO.width_data = 8,
		nlOiO.width_sel = 3;
	oper_mux   nlOli
	( 
	.data({niO0l, niOOl, nl01O, {2{nl1il}}, nl01O, niOOl, niO0l}),
	.o(wire_nlOli_o),
	.sel({n001O, n001l, n0i1i}));
	defparam
		nlOli.width_data = 8,
		nlOli.width_sel = 3;
	oper_mux   nlOll
	( 
	.data({niO0O, niOOO, nl00i, {2{nl1iO}}, nl00i, niOOO, niO0O}),
	.o(wire_nlOll_o),
	.sel({n001O, n001l, n0i1i}));
	defparam
		nlOll.width_data = 8,
		nlOll.width_sel = 3;
	oper_mux   nlOlO
	( 
	.data({niOii, nl11i, nl00l, {2{nl1li}}, nl00l, nl11i, niOii}),
	.o(wire_nlOlO_o),
	.sel({n001O, n001l, n0i1i}));
	defparam
		nlOlO.width_data = 8,
		nlOlO.width_sel = 3;
	oper_mux   nlOOi
	( 
	.data({{2{1'b0}}, nl00O, {2{nl1ll}}, nl00O, {2{1'b0}}}),
	.o(wire_nlOOi_o),
	.sel({n001O, n001l, n0i1i}));
	defparam
		nlOOi.width_data = 8,
		nlOOi.width_sel = 3;
	oper_mux   nlOOl
	( 
	.data({nl1lO, {2{nl11l}}, nl1lO, niOil, {2{nlilO}}, niOil}),
	.o(wire_nlOOl_o),
	.sel({((n1O0O44 ^ n1O0O43) & n001O), n001l, n0i1i}));
	defparam
		nlOOl.width_data = 8,
		nlOOl.width_sel = 3;
	oper_mux   nlOOO
	( 
	.data({nl1Oi, {2{nl11O}}, nl1Oi, niOiO, {2{nilOO}}, niOiO}),
	.o(wire_nlOOO_o),
	.sel({((n1Oii42 ^ n1Oii41) & n001O), ((n1Oil40 ^ n1Oil39) & n001l), n0i1i}));
	defparam
		nlOOO.width_data = 8,
		nlOOO.width_sel = 3;
	assign
		fcos_o = {n0Oi, n0lO, n0ll, n0li, n0iO, n0il, n0ii, n00O, n00l, n0OO},
		fsin_o = {n01O, n01l, n01i, n1OO, n1Ol, n1Oi, n1lO, n1ll, n1li, n00i},
		n01OO = 1'b1,
		out_valid = ni0l;
endmodule //nco
//synopsys translate_on
//VALID FILE
